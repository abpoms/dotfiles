((("task" .
   [1 0 0 0])
  ("ComputeMatchScoreTask" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("args" .
   [1 0 0 0])
  ("edit_height" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("HighLevel" .
   [2 0 0 0 0 0 0 0 0])
  ("get_coord_x_accessor" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("add_requirement_fields" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("COORD_X" .
   [1 0 0 0 0 0 0])
  ("rt" .
   [2 0])
  ("ControlPointRegion" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("LegionRuntime" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("LogicalRegion" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("index_space" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("FeatureImage" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("bucket_path" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("image_string" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("getline" .
   [1 0 0 0 0 0 0])
  ("get" .
   [1 0 0])
  ("st" .
   [1 0])
  ("from_point" .
   [1 0 0 0 0 0 0 0 0 0])
  ("DomainPoint" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("min" .
   [2 0 0])
  ("uint32_t" .
   [1 0 0 0 0 0 0 0])
  ("Pipeline" .
   [1 0 0 0 0 0 0 0])
  ("abs_tol" .
   [1 0 0 0 0 0 0])
  ("real_t" .
   [1 0 0 0 0 0])
  ("-l" .
   [1 0])
  ("-N" .
   [1 0])
  ("CLOCKS_PER_SEC" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("float" .
   [1 0 0 0 0])
  ("UView" .
   [2 0 0 0 0])
  ("compare" .
   [1 0 0 0 0 0 0])
  ("camel-snake-kebab" .
   [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("->kebab-case" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("fn" .
   [1 0])
  ("guest" .
   [1 0 0 0 0])
  ("protocol" .
   [1 0 0 0 0 0 0 0])
  (":shared" .
   [1 0 0 0 0 0 0])
  (":public_network" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("network" .
   [1 0 0 0 0 0 0])
  ("ansible" .
   [1 0 0 0 0 0 0])
  ("reservation" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":" .
   [4])
  ("reviews-link" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("reviews" .
   [1 0 0 0 0 0 0])
  ("resp/bad-request" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("owner" .
   [1 0 0 0 0])
  (":owner-review-detail" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("self-link" .
   [3 0 0 0 0 0 0 0 0])
  ("default/review" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("owner-links" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":review" .
   [3 0 0 0 0 0 0])
  (":review-detail" .
   [2 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":reviews" .
   [2 0 0 0 0 0 0 0])
  (":owner-res-detail" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":owner-detail" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("owner-info" .
   [3 0 0 0 0 0 0 0 0 0])
  ("insert-self-links" .
   [2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("owner-self" .
   [2 0 0 0 0 0 0 0 0 0])
  ("extract-review" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("format-reservation" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("owner-reviews" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("owner-profile" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("evil-insert-state-map" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":email-reminder" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":text-reminder" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":password" .
   [2 0 0 0 0 0 0 0 0])
  ("valid-boolean?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("valid-name?" .
   [4 0 0 0 0 0 0 0 0 0 0])
  ("valid-password?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("valid-email?" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("v/is-email?" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("v/max-length?" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("v/min-length?" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("v/not-nil?" .
   [1 0 0 0 3 0 0 0 0 0])
  ("and->" .
   [4 0 0 0 0])
  ("nibbol-backend.util" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("param" .
   [2 0 0 0 0])
  ("optional" .
   [8 0 0 0 0 0 0 0])
  ("v/rule" .
   [5 0 0 0 0 0])
  ("owner-session-login" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("email-reminder" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("text-reminder" .
   [2 0 0 0 0 1 0 0 0 0 0 0 0])
  ("password" .
   [3 0 0 0 0 0 0 0])
  (":keys" .
   [1 0 0 0 0])
  ("valid-owner-update?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("defvalidator" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("resp/unauthorized" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("has-access-to-owner?" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("last-name" .
   [4 0 0 0 0 0 0 0 0])
  ("first-name" .
   [4 0 0 0 0 0 0 0 0 0])
  ("update-in" .
   [1 0 0 0 0 0 1 0 0])
  ("defhandler" .
   [1 0 0 0 0 0 0 0 0 0])
  (":default-value" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":_id" .
   [3 0 0 0])
  (":*" .
   [1 0])
  ("coerce/to-date-time" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("to-date" .
   [1 0 0 0 0 0 0])
  (":method" .
   [1 0 0 0 0 0 0])
  (":lng" .
   [1 0 0 0])
  (":lat" .
   [2 0 0 0])
  ("log/debug" .
   [1 0 0 0 0 0 0 0 0])
  ("log/info" .
   [1 0 0 0 0 0 0 0])
  ("call-process" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("exec-path" .
   [1 0 0 0 0 0 0 0 0])
  (":searchbox-url" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("index/connect" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":where" .
   [3 0 0 0 0 0])
  ("start-date" .
   [1 0 0 0 0 0 0 0 0 0])
  ("to-sql-time" .
   [0 0 0 0 0 0 1 0 0 0 0])
  (":start-time" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("model/gather" .
   [1 0 0 0 0 0 0 0 1 0 0 0])
  ("model" .
   [1 0 0 0 0])
  ("clojure.pprint" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("with-caribou" .
   [0 0 0 0 0 0 0 0 1 1 0 0])
  ("caribou.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("get-appointments" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("Cats" .
   [1 0 0 0])
  ("q/match" .
   [1 0 0 0 0 0 0])
  ("Laura" .
   [1 0 0 0 0])
  ("Peninsula" .
   [0 0 0 1 0 1 0 0 0])
  ("esi/get-mapping" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":nested" .
   [1 0 0 0 0 0 0])
  ("Dogs" .
   [1 0 0 1])
  ("q/nested" .
   [2 0 0 0 0 0 0 0])
  (":query" .
   [3 0 0 0 0 0])
  ("dogs" .
   [1 0 0 0])
  ("q/term" .
   [2 0 0 0 0 0])
  ("b/bulk" .
   [0 0 0 0 0 1])
  ("pprint" .
   [5 0 0 0 0 0])
  ("esd" .
   [1 0 0])
  ("esr" .
   [1 0 0])
  (":hospitals" .
   [7 0 0 0 0 0 0 0 0 0])
  ("coll?" .
   [0 0 0 1 0])
  ("col" .
   [1 0 0])
  ("caribou.model" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("esr/connect!" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":animal-types" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0])
  (":animals" .
   [1 0 0 0 0 0 0 0])
  ("animal-vets" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("animal-type" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("hospitals" .
   [2 0 0 0 0 0 0 0 0])
  (":vets" .
   [2 0 0 0 0])
  ("flatten" .
   [1 0 0 0 0 0 0])
  (":params" .
   [3 0 0 0 0 0 0])
  ("lat" .
   [1 0 0])
  ("model/pick" .
   [4 0 0 0 0 0 0 0 0 0])
  (":vet" .
   [6 0 0 0])
  ("model/models" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("model/update" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":hospital-id" .
   [2 0 0 0 0 0 0 0 0 0 0 1])
  ("model/create" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("ns-resolve" .
   [1 0 1 0 1 0 0 0 0 0])
  ("leiningen.caribou.util>" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("user" .
   [1 0 0 0])
  ("eval" .
   [1 0 0 0])
  ("set" .
   [1 0 0])
  ("*boot*" .
   [5 0 0 0 0 0])
  ("load-boot" .
   [3 0 0 0 0 0 0 0 0])
  ("macroexpand-1" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1])
  ("macroexpand" .
   [0 0 0 0 0 0 0 0 0 0 4])
  (":dynamic" .
   [3 0 0 0 0 0 0 0])
  ("boot" .
   [18 0 0 0])
  ("boot-config" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("days" .
   [2 0 0 0])
  ("plus" .
   [2 0 0 0])
  ("-8" .
   [1 0])
  ("time-zone-for-offset" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("clj-time.local" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("to-time-zone" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("to-sql-date" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("today-at" .
   [3 0 1 0 0 0 0 0])
  ("clj-time.core" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0])
  ("use" .
   [5 0 0])
  ("lights" .
   [1 0 0 0 0 0])
  ("position" .
   [2 0 0 0 0 0 0 0])
  ("light" .
   [2 0 0 0 0])
  ("shade_temp" .
   [2 0 0 0 0 0 0 0 0 0])
  ("is" .
   [3 0])
  ("shade" .
   [8 0 0 0 0])
  ("and" .
   [2 0 0])
  ("to_light_unit" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("to_light_distance" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0])
  ("to_light" .
   [2 0 0 0 0 0 0 0])
  ("8" .
   [2])
  ("or" .
   [1 0])
  ("4" .
   [6])
  ("255" .
   [4 0 0])
  ("diffuse" .
   [1 0 0 0 0 0 0])
  ("world_objects" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("5" .
   [8])
  ("2" .
   [6])
  ("3" .
   [4])
  ("plane" .
   [4 0 0 0 0])
  ("Plane" .
   [2 0 0 0 0])
  ("numerator" .
   [1 0 0 0 0 0 0 0 0])
  ("denominator" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("dot" .
   [4 0 0])
  ("distance" .
   [4 0 0 0 0 0 0 0])
  ("get_intersection" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("self" .
   [10 0 0 0])
  ("__init__" .
   [1 0 0 0 0 0 0 0])
  ("def" .
   [4 0 0])
  ("Sphere" .
   [1 0 0 0 0 0])
  ("Ray" .
   [1 0 0])
  ("Camera" .
   [1 0 0 0 0 0])
  ("Light" .
   [2 0 0 0 0])
  ("scene_objects" .
   [0 0 0 0 0 0 2 0 0 0 0 0 0])
  ("numpy" .
   [1 0 0 0 0])
  ("world" .
   [1 0 0 0 0])
  ("array" .
   [5 0 0 0 0])
  ("load" .
   [1 0 0 0])
  ("clojure-mode" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("paredit" .
   [1 0 0 0 0 0 0])
  ("jedi" .
   [1 0 0 0])
  ("solarized-theme" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("magit" .
   [1 0 0 0 0])
  ("smex-major-mode-commands" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("smex" .
   [1 0 0 0])
  ("buffer-move" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("ac-nrepl-setup" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("magit-status" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("kbd" .
   [4 0 0])
  ("global-set-key" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 2])
  ("np" .
   [13 0])
  ("clojure.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("persistent!" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("ret" .
   [1 0 0])
  ("10000" .
   [1 0 0 0 0])
  ("1000" .
   [3 0 0 0])
  ("10" .
   [6 1])
  ("bfizz-buzz" .
   [4 0 0 0 0 0 0 0 0 0])
  ("fizzbuzz" .
   [1 0 0 0 0 0 0 0])
  ("13" .
   [1 0])
  ("time" .
   [6 0 0 0])
  ("future" .
   [4 0 0 0 0 0])
  ("100" .
   [11 0 1])
  ("range" .
   [1 0 0 0 0])
  ("even?" .
   [1 0 0 0 0])
  ("filter" .
   [2 0 0 0 0 0])
  ("fizz-buzz" .
   [11 0 0 0 1 0 0 0 0])
  ("rollback" .
   [1 0 0 0 0 0 0 0])
  ("response" .
   [3 0 0 0 0 0 0 0])
  ("commit" .
   [3 0 0 0 0 0])
  ("transaction" .
   [6 0 0 0 0 0 0 0 0 0 0])
  ("db" .
   [2 0])
  ("django" .
   [1 0 0 0 0 0])
  ("pass" .
   [5 0 0 0])
  ("run" .
   [2 0 0])
  ("LABEL" .
   [3 0 0 0 0])
  ("MethodScope" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("c_str" .
   [1 0 0 0 0])
  ("emit_addi" .
   [2 0 0 0 0 0 0 0 0])
  ("emit_jalr" .
   [1 0 0 0 0 0 0 0 0])
  ("T" .
   [1])
  ("WORD_SIZE" .
   [2 0 0 0 0 0 0 0 0])
  ("size" .
   [2 0 0 0])
  ("len" .
   [1 0 0])
  ("actuals" .
   [1 0 0 0 0 0 0])
  ("imm" .
   [2 0 0])
  ("src2" .
   [2 0 0 0])
  ("src1" .
   [2 0 0 0])
  ("ZERO" .
   [1 0 0 0])
  ("SP" .
   [4 0])
  ("emit_addiu" .
   [1 0 0 0 0 0 0 0 0 0])
  ("emit_add" .
   [2 0 0 0 0 0 0 0])
  ("ss" .
   [4 0])
  ("stringstream" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("method_name" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("method_lookup" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("String" .
   [1 0 0 0 0 0])
  ("method_insert" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ct" .
   [1 0])
  ("CgenClassTableP" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("class_table" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("rbegin" .
   [1 0 0 0 0 0])
  ("reverse" .
   [1 0 0 0 0 0 0])
  ("expressions" .
   [7 0 0 0 0 0 0 0 0 0 0])
  ("actual" .
   [3 0 0 0 0 0])
  ("CgenClassTable" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("emit_method_ref" .
   [2 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("endl" .
   [5 0 0 0])
  ("DISPTAB_SUFFIX" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("method" .
   [6 0 0 0 0 0])
  ("code_dispatch_table" .
   [0 0 0 0 0 0 0 0 0 1 0 1 0 3 0 0 0 0 2])
  ("second" .
   [3 0 0 0 0 0])
  ("find" .
   [3 0 0 0])
  ("methodtab" .
   [4 0 0 0 0 0 0 0 0])
  ("IO" .
   [1 0])
  ("Str" .
   [1 0 0])
  ("Bool" .
   [1 0 0 0])
  ("Int" .
   [1 0 0])
  ("copy_object_reg" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("copy" .
   [1 0 0 0])
  ("Object" .
   [2 0 0 0 0 0])
  ("CgenNodeP" .
   [4 0 0 0 0 0 0 0 0])
  ("get_offset" .
   [3 0 0 0 0 0 0 0 0 0])
  ("root_str" .
   [1 0 0 0 0 0 0 0])
  ("include" .
   [3 0 0 0 0 0 0])
  ("code_object_methods" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("emit_jal" .
   [2 0 0 0 0 0 0 0])
  ("A1" .
   [1 0])
  ("emit_pop" .
   [1 0 0 0 0 0 0 0])
  ("emit" .
   [1 0 0 0])
  ("emit_push" .
   [2 0 0 0 0 0 0 0 0])
  ("emit_blt" .
   [1 0 0 0 0 0 0 0])
  ("T2" .
   [4 0])
  ("emit_bleq" .
   [1 0 0 0 0 0 0 0 0])
  ("emit_" .
   [4 0 0 0 0])
  ("t" .
   [3])
  ("type" .
   [3 0 0 0])
  ("compare_helper" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("e2" .
   [5 0])
  ("Expression" .
   [6 0 0 0 0 0 0 0 0 0])
  ("truebool" .
   [2 0 1 0 0 0 0 1])
  ("emit_label_def" .
   [1 0 0 0 0 0 0 0 0 1 0 0 1 2])
  ("emit_label_ref" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("emit_beqz" .
   [2 0 0 0 0 0 0 0 0])
  ("emit_beq" .
   [2 0 0 0 0 0 0 0])
  ("falsebool" .
   [4 0 0 1 0 0 0 0 0])
  ("emit_load_bool" .
   [9 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("label_gen" .
   [4 0 0 0 0 0 0 0 1])
  ("l" .
   [4])
  ("emit_store_int" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("DEFAULT_OBJFIELDS" .
   [0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("source" .
   [5 0 0 0 0 0])
  ("dest" .
   [6 0 0 0])
  ("emit_fetch_bool" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("e1" .
   [8 0])
  ("copy_object" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("object" .
   [2 0 0 0 0 0])
  ("PROTOBJ_SUFFIX" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("get_string" .
   [4 0 0 0 0 0 0 0 0 0])
  ("label" .
   [23 0 0 0 0])
  ("string" .
   [7 0 0 0 0 0])
  ("emit_load_address" .
   [1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 2])
  ("SELF_TYPE" .
   [1 0 0 0 0 0 0 0 0])
  ("type_name" .
   [6 0 0 0 0 0 0 0 0])
  ("S0" .
   [1 0])
  ("A" .
   [1])
  ("emit_move" .
   [10 0 0 0 0 0 0 0 0])
  ("dest_reg" .
   [1 0 0 0 0 0 0 0])
  ("emit_store" .
   [3 0 0 0 0 0 0 0 0 0])
  ("src_reg" .
   [4 0 0 0 0 0 0])
  ("expr" .
   [7 0 0 0])
  ("ACC" .
   [28 0 0])
  ("str" .
   [12 0 0])
  ("code" .
   [12 0 0 0])
  ("CgenEnvP" .
   [12 0 0 0 0 0 0 0])
  ("pop_env" .
   [1 0 0 0 0 0 0])
  ("local_stack" .
   [11 0 0 0 0 0 0 0 0 0 0])
  ("true" .
   [1 0 0 0])
  ("in" .
   [2 0])
  ("static" .
   [10 0 0 0 0 0])
  ("e" .
   [5])
  ("get_env" .
   [2 0 0 0 0 0 0])
  ("type_decl" .
   [1 0 0 0 0 0 0 0 0])
  ("get_type" .
   [2 0 0 0 0 0 0 0])
  ("get_name" .
   [12 0 0 0 0 0 0 0])
  ("virtual" .
   [3 0 0 0 0 0 0])
  ("nth" .
   [2 0 0])
  ("next" .
   [2 0 0 0])
  ("n" .
   [1])
  ("more" .
   [2 0 0 0])
  ("first" .
   [3 0 0 0 0])
  ("formals" .
   [5 0 0 0 0 0 0])
  ("formal" .
   [3 0 0 0 0 0])
  ("false" .
   [3 0 0 0 0])
  ("location" .
   [10 0 0 0 0 0 0 0])
  ("name" .
   [13 0 0 0])
  ("attr" .
   [6 0 0 0])
  ("nd" .
   [15 0])
  ("push_env" .
   [2 0 0 0 0 0 0 0])
  ("env" .
   [43 0 0])
  ("loc" .
   [15 0 0])
  ("f" .
   [5])
  ("assert" .
   [1 0 0 0 0 0])
  ("var" .
   [6 0 0])
  ("return" .
   [17 0 0 0 0 0])
  ("break" .
   [1 0 0 0 0])
  ("end" .
   [4 0 0])
  ("i" .
   [12])
  ("ScopeEntry" .
   [1 0 0 0 0 0 0 0 0 0])
  ("s" .
   [12])
  ("rend" .
   [1 0 0 0])
  ("it" .
   [21 0])
  ("iterator" .
   [9 0 0 0 0 0 0 0])
  ("vector" .
   [14 0 0 0 0 1])
  ("for" .
   [4 0 0])
  ("Scope" .
   [10 0 0 0 0])
  ("map" .
   [15 0 0])
  ("std" .
   [30 0 0])
  ("push_back" .
   [2 0 0 0 0 0 0 0 0])
  ("insert" .
   [5 0 0 0 0 0])
  ("S" .
   [3])
  ("sym" .
   [11 0 0])
  ("SELF" .
   [6 0 0 0])
  ("FP" .
   [4 0])
  ("offset" .
   [4 0 0 0 0 0])
  ("emit_load" .
   [4 0 0 0 0 0 0 0 0])
  ("else" .
   [6 0 0 0])
  ("reg" .
   [3 0 0])
  ("C" .
   [2])
  ("local" .
   [9 0 0 0 0])
  ("bool" .
   [3 0 0 0])
  ("b" .
   [4])
  ("char" .
   [10 0 1 0])
  ("const" .
   [11 0 0 0 0])
  ("T1" .
   [22 0])
  ("fp_offset" .
   [3 0 0 0 0 0 0 0 0])
  ("this" .
   [1 0 0 0])
  ("int" .
   [7 0 0])
  ("address" .
   [11 0 0 0 0 0 0])
  ("ostream" .
   [10 0 0 0 0 0 0])
  ("code_ref" .
   [4 0 0 0 0 0 0 0])
  ("c" .
   [1])
  ("private" .
   [1 0 0 0 0 0 0])
  ("p" .
   [1])
  ("CgenLocP" .
   [9 0 0 0 0 0 0 0])
  ("typedef" .
   [7 0 0 0 0 0 0])
  ("class" .
   [5 0 0 0 0])
  ("a" .
   [10])
  ("add" .
   [3 0 0])
  ("Symbol" .
   [17 0 0 0 0 0])
  ("lookup" .
   [8 0 0 0 0 0])
  ("CgenLoc" .
   [25 0 0 0 0 0 0])
  ("void" .
   [16 0 0 0])
  ("CgenEnv" .
   [19 0 0 0 0 0 0])
  ("public" .
   [2 0 0 0 0 0])
  ("symtab" .
   [7 0 0 0 0 0])
  ("new" .
   [1 0 0])
  ("server" .
   [1 0 0 0 0 0])
  ("Server" .
   [2 0 0 0 0 0])
  ("java" .
   [1 0 0 0])
  ("instruction" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("instrFile" .
   [0 0 0 0 0 0 1 0 0])
  ("ADDRESS_WIDTH" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("templates" .
   [0 0 0 0 0 0 0 0 1])
  ("print" .
   [7 0 0 0 0])
  ("resources" .
   [0 0 0 0 0 0 0 0 1])
  ("resource" .
   [7 0 0 0 0 0 0 1])
  ("tpl_args" .
   [1 0 0 1 3 0 1 0])
  ("if" .
   [7 0])
  ("warning" .
   [4 0 0 0 0 0 0])
  ("kind" .
   [2 0 0 0])
  ("None" .
   [12 0 0 0])
  ("static_file" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("get_url" .
   [3 0 0 1 0 0 0])
  ("from" .
   [5 0 0 0])
  ("Bottle" .
   [6 0 0 0 0 0])
  ("import" .
   [9 0 0 0 0 0])
  ("app" .
   [1 0 0])
  ("default_app" .
   [0 0 0 0 0 0 0 1 0 1 0])
  ("json_changed" .
   [1 0 0 0 1 1 0 2 0 0 0 0])
  ("json" .
   [1 0 0 0])
  ("dumps" .
   [1 0 0 0 0])
  ("not" .
   [2 0 0])
  ("username" .
   [2 0 0 0 0 0 0 0])
  ("request" .
   [4 0 0 0 0 0 0])
  ("forms" .
   [3 0 0 0 0])
  ("email_validator" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("bottle" .
   [3 0 0 0 0 0])
  ("template" .
   [1 0 0 0 0 0 0 0])
  ("submit" .
   [1 0 0 0 0 0])
  ("error_msg" .
   [1 0 0 0 0 0 0 0 0])
  ("num_threads" .
   [6 0 0 0 0 0 0 0 0 0 0])
  ("MPI_COMM_WORLD" .
   [9 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("nx" .
   [4 0])
  ("elements_per_thread" .
   [16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sets" .
   [1 0 0 0])
  ("slave" .
   [2 0 0 0 0])
  ("sort_set" .
   [5 0 0 0 0 0 0 0])
  ("MPI_INT" .
   [7 0 0 0 0 0 0])
  ("MPI_ANY_TAG" .
   [7 0 0 0 0 0 0 0 0 0 0])
  ("data" .
   [28 0 0 0])
  ("inplace_sort" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("MPI_Recv" .
   [4 0 0 0 0 0 0 0])
  ("node_data" .
   [2 0 0 0 0 0 0 0 0])
  ("elements" .
   [2 0 0 0 0 0 0 0])
  ("nstarts" .
   [12 0 0 0 0 0 0])
  ("MANAGER_ID" .
   [6 0 0 0 0 0 0 0 0 0])
  ("smallest_set_index" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("starts" .
   [11 0 0 0 0 0])
  ("smallest_size" .
   [6 0 0 0 0 0 0 0 0 0 0 0 0])
  ("smallest_index" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("start" .
   [1 0 0 0 0])
  ("length" .
   [3 0 0 0 0 0])
  ("smallest_set_size" .
   [10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("find_smallest_set" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("smallest" .
   [2 0 0 0 0 0 0 0])
  ("node_map" .
   [13 0 0 0 0 0 0 0])
  ("id" .
   [1 0])
  ("slave_worker" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("data_size" .
   [15 0 0 0 0 0 0 0 0])
  ("MPI_Rect" .
   [1 0 0 0 0 0 0 0])
  ("smallest_set" .
   [7 0 0 0 0 0 0 0 0 0 0 0])
  ("set_map" .
   [8 0 0 0 0 0 0])
  ("intersect_map" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0])
  ("intersect_iterator" .
   [4 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("nrslt" .
   [3 0 0 0 0])
  ("element" .
   [1 0 0 0 0 0 0])
  ("smallest_set_counts" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("MPI_Send" .
   [2 0 0 0 0 0 0 0])
  ("memcpy" .
   [2 0 0 0 0 0])
  ("insert_intersect" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("rslt" .
   [2 0 0 0])
  ("begin" .
   [1 0 0 0 0])
  ("GLuint" .
   [5 0 0 0 0 0])
  ("programID" .
   [6 0 0 0 0 0 0 0 0])
  ("LoadShaders" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("glUseProgram" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("glDeleteProgram" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("0f" .
   [52 0])
  ("0" .
   [27])
  ("1" .
   [9])
  ("ViewMatrix" .
   [0 0 0 0 1 0 0 0 0 0])
  ("mv_matrix" .
   [2 0 0 0 0 1 0 0 0])
  ("glGetUniformLocation" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("glUniformMatrix4fv" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("p_matrix" .
   [0 0 0 0 0 0 0 1])
  ("GL_FALSE" .
   [2 0 0 0 0 0 0 0])
  ("Projection" .
   [1 0 0 0 0 0 0 0 0 0])
  ("glEnableVertexAttribArray" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0])
  ("glBindBuffer" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("normal" .
   [8 0 0 0 0 0])
  ("g_vertex_normal_data" .
   [2 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0])
  ("glGetAttribLocation" .
   [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0])
  ("glVertexAttribPointer" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("normalID" .
   [4 0 0 0 0 0 0 0])
  ("GL_FLOAT" .
   [1 0 0 0 0 0 0 0])
  ("GL_TRUE" .
   [1 0 0 0 0 0 0])
  ("GL_ARRAY_BUFFER" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("normalbuffer" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("positionID" .
   [4 0 0 0 0 0 0 0 0 0])
  ("glDisableVertexAttribArray" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("cout" .
   [1 0 0 0])
  ("glm" .
   [6 0 0])
  ("mat4" .
   [4 0 0 0])
  ("Model" .
   [1 0 0 0 0])
  ("matrix" .
   [4 0 0 0 0 0])
  ("v" .
   [3])
  ("switch-window" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ray" .
   [10 0 0])
  ("origin" .
   [2 0 0 1 0 0])
  ("sqrt" .
   [2 0 0 0])
  ("math" .
   [2 0 0 0])
  ("proj_on_ray" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":start_time" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":end" .
   [1 0 0 0])
  ("create" .
   [0 0 0 0 0 1])
  ("create-veterinary-table" .
   [0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("require" .
   [11 0 0 0 0 0 0])
  ("korma.db" .
   [1 0 0 0 0 0 0 0])
  (":as" .
   [5 0 0])
  ("lobos.connectivity" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("con/open-global" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("nibbol-server.database.config/data-db" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("email" .
   [9 0 0 0 0])
  ("table" .
   [2 0 0 0 0])
  (":veterinary" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("->" .
   [8 0])
  ("nvarchar" .
   [1 0 0 0 0 0 0 0])
  (":name" .
   [9 0 0 0 0])
  ("vet-data" .
   [1 0 0 0 0 0 0 0])
  ("doall" .
   [1 0 2 0 0])
  ("parse-and-insert-veterinary" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("/Users/abpoms/Downloads/Vet" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6])
  ("Schema.csv" .
   [7 0 0 0 0 0 0 0 0 0])
  ("csv-and-header" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("header-fields" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("parse-and-insert-csv" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ent/veterinary" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("First" .
   [1 0 0 0 0])
  ("Name" .
   [1 0 0 0])
  ("200" .
   [1 0 0])
  (":gender" .
   [1 0 0 0 0 0 0])
  ("nil" .
   [7 0 0])
  ("parse-and-insert-" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1])
  ("create-veterinary-animal-table" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("parse-and-insert-hospital" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("/Users/abpoms/Downloads/Hospital" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("create-hospital-table" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":zipcode" .
   [3 0 0 0 0 0 0 0])
  ("parse-" .
   [0 0 0 0 0 1])
  ("parse-and-insert-veterinary-hospital" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("row" .
   [2 0 0])
  ("name-index" .
   [0 0 0 0 0 0 0 1 0 0])
  ("hospital" .
   [12 0 0 0 0 0 0 1])
  (":id" .
   [16 0 0])
  ("15" .
   [2 0])
  ("30" .
   [1 0])
  ("limit" .
   [1 0 0 0 0])
  ("20" .
   [2 0])
  ("parse-all" .
   [1 0 0 0 0 0 0 0 0])
  ("files" .
   [1 0 0 0 0])
  ("caribou" .
   [0 0 0 0 0 0 1])
  ("nibbol-backend.boot" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2])
  ("config" .
   [2 0 0 0 0 0])
  (":animal" .
   [1 0 0 0 0 0 0])
  (":animal-type" .
   [3 0 0 0 0 0 0 0 0 0 0 1])
  (":vet-specialty" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":hospital" .
   [7 0 0 0 0 0 0 1 0])
  (":type" .
   [15 0 0 0 0])
  (":city" .
   [5 0 0 0 0])
  ("city" .
   [3 0 0 0])
  (":address1" .
   [2 0 0 0 0 0 0 0 0])
  ("street" .
   [2 0 0 0 0 0])
  ("zipmap" .
   [0 0 0 1 0 0])
  (":state" .
   [2 0 0 0 0 0])
  ("state" .
   [1 0 0 0 0])
  (":address" .
   [6 0 0 0 0 0 0 0])
  (":country" .
   [2 0 0 0 0 0 0 0])
  (":fields" .
   [4 0 0 0 0 0 0])
  ("detail" .
   [1 0 0 0 0 0])
  ("sex" .
   [1 0 0])
  (":first-name" .
   [3 0 0 0 0 0 0 0 0 0 0])
  (":last-name" .
   [3 0 0 0 0 0 0 0 0 0])
  (":title" .
   [1 0 0 0 0 0])
  (":phone" .
   [3 0 0 0 0 0])
  (":email" .
   [3 0 0 0 0 0])
  (":include" .
   [1 0 0 0 0 0 0 0])
  (":specialties" .
   [0 0 0 0 1 0 1 0 0 0 0 0])
  (":address-two" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":postal-code" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("map-keys" .
   [5 0 0 0 0 0 0 0])
  ("->camelCaseString" .
   [0 0 0 0 0 2 0 3 0 0 0 0 0 0 0 0 1])
  (":else" .
   [2 0 0 0 0])
  ("mapper" .
   [1 0 0 0 0 0])
  ("ifn?" .
   [0 0 2 0])
  (":appointments" .
   [4 0 0 0 0 1 0 0 0 0 0 0 0])
  ("vet" .
   [3 0 0])
  ("equal" .
   [1 0 0 0 0])
  (":timezone" .
   [3 0 0 0 0 0 0 0 0])
  ("evil" .
   [1 0 0 0])
  ("evil-mode" .
   [1 0 0 0 0 0 0 0 0])
  ("ks" .
   [2 0])
  ("params" .
   [1 0 0 0 0 0])
  (":active" .
   [1 0 0 0 0 0 0])
  (":pets" .
   [5 0 0 0 0])
  (":reservations" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0])
  (":owner" .
   [5 0 0 0 0 0])
  (":pet" .
   [8 0 0 0])
  (":reservation" .
   [6 0 0 0 0 0 0 0 0 0 0 0])
  (":pet-detail" .
   [4 0 0 0 0 0 0 0 0 0 0])
  (":reservation-detail" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":hospital-detail" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("m" .
   [1])
  ("util/move-key" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("vet-profile" .
   [5 0 0 0 0 0 0 0 0 0 0])
  ("appts" .
   [3 0 0 0 0])
  ("list" .
   [0 0 1 0])
  ("vet-profiles" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("format-vet-for-index" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("default/vet" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("default/hospital" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":appointment-detail" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":appointment" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  (":appt" .
   [1 0 0 0 0])
  (":dates" .
   [2 0 0 0 0 0])
  ("appt-links" .
   [1 0 0 0 0 0 0 0 0 0])
  (":GET" .
   [1 0 0 0])
  ("--force" .
   [1 0 0 0 0 0 0])
  ("nibbol.owner.data" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("get-facets" .
   [1 0 0 0 0 0 0 0 0 0])
  ("get-latest-es-doc" .
   [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("questions" .
   [2 0 0 0 0 0 0 0 0])
  (":_source" .
   [2 0 0 0 0 0 0 0])
  (":data" .
   [3 0 0 0 0])
  (":version" .
   [2 0 0 0 0 0 0 0])
  ("facets" .
   [1 0 0 0 0 0])
  ("reason" .
   [2 0 0 0 0 0])
  ("clojure.walk" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("walk" .
   [4 0 0 0])
  ("identity" .
   [3 0 0 0 0 0 0 0])
  ("keyword?" .
   [3 0 0 0 0 0 0 0])
  ("println" .
   [2 0 0 0 0 0 0])
  ("defn" .
   [1 0 0 0])
  ("step" .
   [15 0 0 0])
  ("step-key" .
   [2 0 0 0 0 0 0 0])
  ("history" .
   [4 0 0 0 0 0 0])
  ("peek" .
   [0 0 0 1])
  ("valid-next?" .
   [5 0 0 0 0 0 0 0 0 0 0])
  (":next" .
   [2 0 0 0 0])
  (":choices" .
   [1 0 0 0 0 0 0 0])
  ("nibbol.index" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("clojure.edn" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("read-string" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("esd/put" .
   [1 0 0 0 0 0 0])
  ("symptoms" .
   [1 0 0 0 0 0 0 0])
  ("postwalk" .
   [1 0 0 0 0 0 0 0])
  (":a" .
   [2 0])
  (":b" .
   [1 0])
  ("->>" .
   [1 0 0])
  ("nibbol.seed" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("seed-symptoms" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0])
  ("verify-symptoms-order" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("get-symptom-questions" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":skin" .
   [1 0 0 0 0])
  ("pr" .
   [1 0])
  ("pr/explain-session" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("api/converge" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("webserver" .
   [0 0 0 0 0 0 1 0 0])
  ("configure/compute-service" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("ec2" .
   [1 0 0])
  (":default-phases" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":bootstrap" .
   [1 0 0 0 0 0 0 0 0 0])
  (":install" .
   [1 0 0 0 0 0 0 0])
  (":configure" .
   [1 0 0 0 0 0 0 0 0 0])
  (":settings" .
   [1 0 0 0 0 0 0 0 0])
  (":hardware-model" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("setq" .
   [2 0 0 0])
  ("setenv" .
   [1 0 0 0 0 0])
  ("getenv" .
   [1 0 0 0 0 0])
  ("split-string" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("car" .
   [2 0 0])
  ("eshell" .
   [0 0 0 0 0 1])
  ("eshell-path-env" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":vh.vet-id" .
   [2 0 0 0 0 0 0 0 0 0])
  (":vhj.vh$vet-id" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":viv" .
   [3 0 0 0])
  (":viv.visit-type-id" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":=" .
   [1 0])
  (":specialties_vets" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":vh.id" .
   [1 0 0 0 0 0])
  (":h.timezone" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":loc.id" .
   [0 0 0 0 0 0 1])
  (":vth" .
   [1 0 0 0])
  ("clojure.string/join" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("collect" .
   [1 0 0 0 0 0 0])
  (":vet$id" .
   [1 0 0 0 0 0 0])
  (":vh.hospital-id" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("db/collate" .
   [1 0 0 0 0 0 0 0 0 0])
  ("insert-appointments" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("time/in-minutes" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("clojure.test" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("run-all-tests" .
   [0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("run-tests" .
   [0 0 1 1 0 0 0 0 0])
  ("testing" .
   [1 0 0 0 0 0 0])
  ("time/overlaps?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("exception-intervals" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("time/minus" .
   [1 0 0 0 0 0 0 0 0 0])
  ("time/seconds" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("appointment-range-slots" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("appointment-seq" .
   [1 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("day" .
   [1 0 0])
  ("time/plus" .
   [1 0 0 0 0 0 0 0 0])
  ("clojure.tools.logging" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("com.google.ical.util.TimeUtils" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("TimeUtils/toUtc" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("com.google.ical.values.DateValueImpl" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("DateValueImpl" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("java.util.TimeZone/getTimeZone" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (".toString" .
   [1 0 0 0 0 0 0 0 0])
  ("vec3" .
   [4 0 0 0])
  ("KDTree" .
   [1 0 0 0 0 0])
  ("en_i" .
   [11 0 0 0])
  ("tmin" .
   [2 0 0 0])
  ("current" .
   [1 0 0 0 0 0 0])
  ("axis" .
   [9 0 0 0])
  ("ex_i" .
   [6 0 0 0])
  ("next_axis" .
   [2 0 0 0 0 0 0 0 0])
  ("leaf_triangles" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("direction" .
   [1 0 0 0 0 0 0 0 0])
  ("temp_depth" .
   [2 0 0 0 0 0 0 0 0 0])
  ("Triangle" .
   [5 0 0 0 0 0 0 0])
  ("NULL" .
   [2 0 0 0])
  ("final_tri" .
   [2 0 0 0 0 0 0 0 0])
  ("diffuse_i" .
   [1 0 0 0 0 0 0 0 0])
  ("define" .
   [1 0 0 0 0 0])
  ("norm_y" .
   [2 0 0 0 0 0])
  ("r_y" .
   [1 0 0])
  ("r_x" .
   [1 0 0])
  ("norm_x" .
   [1 0 0 0 0 0])
  ("right" .
   [1 0 0 0 0])
  ("high_resolution_clock" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("RayPacket8" .
   [4 0 0 0 0 0 0 0 0 0])
  ("depth" .
   [1 0 0 0 0])
  ("immintrin" .
   [2 0 0 0 0 0 0 0 0])
  ("__m256" .
   [21 0 0 0 0 0])
  ("tmax" .
   [2 0 0 0])
  ("mask" .
   [7 0 0 0])
  ("ox" .
   [2 0])
  ("dx" .
   [2 0])
  ("_mm256_broadcast_ss" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("stack" .
   [9 0 0 0 0])
  ("split" .
   [1 0 0 0 0])
  ("en_gt_split" .
   [6 0 0 0 0 0 0 0 0 0 0])
  ("_mm256_mult" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("_mm256_movemask_ps" .
   [10 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("_mm256_and_ps" .
   [15 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ex_gt_split" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("_mm256_cmp_ps" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ex_le_split" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("_mm256_or_ps" .
   [8 0 0 0 0 0 0 0 0 0 0 0])
  ("en_neq_split" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("left" .
   [1 0 0 0])
  ("en_le_split" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("three" .
   [2 0 0 0 0])
  ("ex_neq_split" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("_mm256_add_ps" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0])
  ("_mm256_mul_ps" .
   [5 0 0 0 0 0 0 0 0 0 0 0 0])
  ("final" .
   [3 0 0 0 0])
  ("_mm256_" .
   [0 0 0 0 0 0 1])
  ("dy8" .
   [2 0 0])
  ("_mm256_sub_ps" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("e2_z" .
   [1 0 0 0])
  ("dz8" .
   [2 0 0])
  ("e2_x" .
   [1 0 0 0])
  ("_CMP_LE_OS" .
   [4 0 0 0 0 0 0 0 0 0])
  ("det" .
   [1 0 0])
  ("_mm256_set1_ps" .
   [6 0 0 0 0 0 0 0 1 0 0 0 0 1])
  ("edge1" .
   [1 0 0 0 0])
  ("_CMP_GE_OS" .
   [2 0 0 0 0 0 0 1 0 0])
  ("T_x" .
   [2 0 0])
  ("T_y" .
   [1 0 0])
  ("e2_y" .
   [1 0 0 0])
  ("_mm256" .
   [3 0 0 0 0 0])
  ("temp2" .
   [1 0 0 0 0])
  ("result" .
   [1 0 0 0 0 0])
  ("_CMP_GT_OS" .
   [2 0 0 0 0 0 0 0 0 0])
  ("new_depth_le_i_depth" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("new_depth_inside_aabb" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("i_depth" .
   [1 0 0 0 0 0 0])
  ("_mm256_andnot_ps" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("memset" .
   [2 0 0 0 0 0])
  ("color" .
   [1 0 0 0 0])
  ("interpolate_normal" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("align" .
   [1 0 0 0 0])
  ("current_tri" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("tx1" .
   [1 0 0])
  ("_mm256_mult_ps" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ty1" .
   [1 0 0])
  ("ty2" .
   [1 0 0])
  ("_mm256_set1_epi32" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("0xFFFFFFFF" .
   [2 0 0 0 0 0 0 0 0 1])
  ("current_mask" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("temp" .
   [2 0 0 0])
  ("en_lt_split" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("_mm256_xor_ps" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("tmp" .
   [3 0 0])
  ("prev_axis" .
   [1 0 0 0 0 0 0 0 0])
  ("next_ex_i" .
   [4 0 0 0 0 0 0 0 0])
  ("left_rays" .
   [1 0 0 0 0 0 0 0 0])
  ("temp_t" .
   [1 0 0 0 0 0])
  ("_mm256_store_ps" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("exit" .
   [1 0 0 0])
  ("ido-enable-flex-matching" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("ido-everywhere" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ido-mode" .
   [1 0 0 0 0 0 0 0])
  ("Schedule" .
   [1 0 0 0 0 0 0 0])
  ("MASTER" .
   [1 0 0 0 0 0])
  ("MPI_Comm_rank" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("size_t" .
   [1 0 0 0 0 0])
  ("schedule_file" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("sched_fs" .
   [1 0 0 0 0 0 0 0])
  ("sched" .
   [1 0 0 0 0])
  ("sched_string" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("buf" .
   [1 0 0])
  ("cml" .
   [1 0 0])
  ("partial" .
   [1 0 0 0 0 0 0])
  ("input" .
   [1 0 0 0 0])
  ("MIN_EXT" .
   [1 0 0 0 0 0 0])
  ("Halide" .
   [2 0 0 0 0 0])
  ("path_str" .
   [1 0 0 0 0 0 0 0])
  ("opendir" .
   [1 0 0 0 0 0 0])
  ("Image" .
   [1 0 0 0 0])
  ("printf" .
   [2 0 0 0 0 0])
  ("terra" .
   [1 0 0 0 0])))
